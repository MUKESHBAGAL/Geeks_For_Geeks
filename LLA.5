###IN C++

class Solution {
public:
    Node *insertInMiddle(Node *head, int x) {
        Node* newNode = new Node(x);
        
        if (!head || head->data >= x) {
            newNode->next = head;
            return newNode;
        }

        Node* current = head;
        while (current->next && current->next->data < x) {
            current = current->next;
        }

        newNode->next = current->next;
        current->next = newNode;

        return head;
    }
};
