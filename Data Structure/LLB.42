							 
							 ### IN C++							

class Solution {
  public:
    Node* linkdelete(Node* head, int n, int m) {
        Node* curr = head;
        
        while (curr != NULL) {
            // Skip M nodes
            for (int i = 1; i < m && curr != NULL; i++) {
                curr = curr->next;
            }
            
            if (curr == NULL) break;
            
            // Start deleting N nodes
            Node* temp = curr->next;
            for (int i = 0; i < n && temp != NULL; i++) {
                Node* del = temp;
                temp = temp->next;
                delete del; // free memory
            }
            
            // Link remaining part
            curr->next = temp;
            
            // Move current to next segment
            curr = temp;
        }
        
        return head;
    }
};



							### IN JAVA
							
class Solution {
    static void linkdelete(Node head, int n, int m) {
        Node curr = head;
        while (curr != null) {
            for (int i = 1; i < m && curr != null; i++) {
                curr = curr.next;
            }
            if (curr == null) break;
            Node temp = curr.next;
            for (int i = 0; i < n && temp != null; i++) {
                temp = temp.next;
            }
            curr.next = temp;
            curr = temp;
        }
    }
}
