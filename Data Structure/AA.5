###C++

class Solution {
public:
    void rotate(vector<int>& arr) {
        if (arr.empty()) {
            return;
        }

        int n = arr.size();
        int lastElement = arr[n - 1];

        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }

        arr[0] = lastElement;
    }
};


###JAVA

class Solution {
    public void rotate(int[] arr) {
        if (arr == null || arr.length == 0) {
            return;
        }

        int n = arr.length;
        int lastElement = arr[n - 1];

        for (int i = n - 1; i > 0; i--) {
            arr[i] = arr[i - 1];
        }

        arr[0] = lastElement;
    }
}

###PYTHON


class Solution:
    def rotate(self, arr):
        if not arr:
            return

        last_element = arr[-1]

        for i in range(len(arr) - 1, 0, -1):
            arr[i] = arr[i - 1]

        arr[0] = last_element

