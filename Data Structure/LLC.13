### IN C++

class Solution {
public:
    Node* insertionSort(Node* head_ref) {
        vector<int> vec;
        Node* temp = head_ref;
        while (temp != nullptr) {
            vec.push_back(temp->data);
            temp = temp->next;
        }

        for (size_t i = 1; i < vec.size(); ++i) {
            int key = vec[i];
            int j = i - 1;
            while (j >= 0 && vec[j] > key) {
                vec[j + 1] = vec[j];
                --j;
            }
            vec[j + 1] = key;
        }

        Node* sorted_head = nullptr;
        Node* sorted_tail = nullptr;

        for (int val : vec) {
            Node* new_node = new Node(val);
            if (sorted_head == nullptr) {
                sorted_head = new_node;
                sorted_tail = sorted_head;
            } else {
                sorted_tail->next = new_node;
                sorted_tail = sorted_tail->next;
            }
        }

        return sorted_head;
    }
};
