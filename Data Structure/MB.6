###IN C++

class Solution {
  public:
    // Function to find transpose of a matrix.
    void transpose(vector<vector<int>>& mat, int n) {
        vector<vector<int>>dupli(mat.begin(),mat.end());
        for(int i=0;i<mat.size();i++){
            for(int j=0;j<mat.size();j++){
                mat[i][j]=dupli[j][i];
            }
        }
    }
};



###IN JAVA

// User function Template for Java
class Solution {
    public void transpose(int n, int mat[][]) {
        int[][] dupli = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                dupli[i][j] = mat[i][j];
            }
        }
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                mat[i][j] = dupli[j][i];
            }
        }
    }
}


###IN PYTHON

class Solution:
    def transpose(self, mat, n):
        dupli = [row[:] for row in mat]
        for i in range(n):
            for j in range(n):
                mat[i][j] = dupli[j][i]
