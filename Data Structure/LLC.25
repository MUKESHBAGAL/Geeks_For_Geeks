### IN C++

class Solution {
  public:
    void removeLoop(Node* head) {
        Node* slow = head, *fast = head;
        while (fast && fast->next) {
            slow = slow->next;
            fast = fast->next->next;
            if (slow == fast) {
                slow = head;
                while (slow != fast) {
                    slow = slow->next;
                    fast = fast->next;
                }
                Node* loopNode = slow;
                while (fast->next != loopNode) {
                    fast = fast->next;
                }
                fast->next = nullptr;
                return;
            }
        }
    }
};



### IN JAVA 


class Solution {
    public void removeLoop(Node head) {
        Node slow = head, fast = head;

        while (fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next.next;

            if (slow == fast) {
                slow = head;

                while (slow != fast) {
                    slow = slow.next;
                    fast = fast.next;
                }

                Node loopNode = slow;
                while (fast.next != loopNode) {
                    fast = fast.next;
                }
                fast.next = null;
                return;
            }
        }
    }
}

