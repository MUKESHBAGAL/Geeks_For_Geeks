###IN C++

class Solution {
  public:
    int findMax1sRow(vector<vector<int>>& mat) {
        int idx=0,mxcount=0;
        for(int i=0;i<mat.size();i++){
            int count=0;
            for(int j=0;j<mat[0].size();j++){
                if(mat[i][j]==1)
                    count++;
            }
            if(mxcount<count){
                mxcount=count;
                idx=i;
            }
        }
        return idx;
    }
};




###IN JAVA

class Solution {
    public int findMax1sRow(int[][] mat) {
        int idx = 0, mxcount = 0;
        for (int i = 0; i < mat.length; i++) {
            int count = 0;
            for (int j = 0; j < mat[0].length; j++) {
                if (mat[i][j] == 1) {
                    count++;
                }
            }
            if (mxcount < count) {
                mxcount = count;
                idx = i;
            }
        }
        return idx;
    }
}



###IN PYTHON

class Solution:
    def findMax1sRow(self, mat):
        idx = 0
        mxcount = 0
        for i in range(len(mat)):
            count = 0
            for j in range(len(mat[0])):
                if mat[i][j] == 1:
                    count += 1
            if mxcount < count:
                mxcount = count
                idx = i
        return idx




