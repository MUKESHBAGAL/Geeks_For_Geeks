####IN C++

class Solution {
public:
    char nonRepeatingChar(string &s) {
        for (int i = 0; i < s.size(); i++) {
            bool isNonRepeating = true;
            for (int j = 0; j < s.size(); j++) {
                if (i != j && s[i] == s[j]) {
                    isNonRepeating = false;
                    break;
                }
            }
            if (isNonRepeating) {
                return s[i];
            }
        }
        return '$';
    }
};


####IN JAVA

class Solution {
    static char nonRepeatingChar(String s) {
        for (int i = 0; i < s.length(); i++) {
            boolean isNonRepeating = true;
            for (int j = 0; j < s.length(); j++) {
                if (i != j && s.charAt(i) == s.charAt(j)) {
                    isNonRepeating = false;
                    break;
                }
            }
            if (isNonRepeating) {
                return s.charAt(i);
            }
        }
        return '$';
        
    }
}


####IN PYTHON

from collections import Counter
class Solution:
    def nonRepeatingChar(self,s):
        freq = Counter(s)
        for ch in s:
            if freq[ch] == 1:
                return ch
        return '$'
    
    
    
    

