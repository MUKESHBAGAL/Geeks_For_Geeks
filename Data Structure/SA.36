### IN C++


class Solution {
  public:

    vector<string> pattern(string& s) {
        for(int i=0;i<s.size();i++){
            for(int j=0;j<s.size()-i;j++){
                cout<<s[j];
            }
            cout<<endl;
        }
    }
};



### IN JAVA

class Solution {
    ArrayList<String> pattern(String s) {
        ArrayList<String> result = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            StringBuilder sb = new StringBuilder();
            for (int j = 0; j < s.length() - i; j++) {
                sb.append(s.charAt(j));
            }
            result.add(sb.toString());
        }
        return result;
    }
}


### IN PYTHON

class Solution:
    def pattern(self, s):
        result = []
        for i in range(len(s)):
            current_pattern = s[:len(s) - i]
            result.append(current_pattern)
        return result




