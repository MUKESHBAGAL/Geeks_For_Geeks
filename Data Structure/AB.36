###IN C

void interchange(int r, int c, int arr[][c]) {
    // Swap first and last column in each row
    for (int i = 0; i < r; i++) {
        int temp = arr[i][0];
        arr[i][0] = arr[i][c - 1];
        arr[i][c - 1] = temp;
    }

    // Printing elements
    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            printf("%d ", arr[i][j]);
        }
        printf("\n");
    }
}





###IN C++

class Solution {
public:
    // Complete this function
    void interchange(vector<vector<int>>& arr, int r, int c) {
        // Reverse each row
        for (int i = 0; i < r; i++) {
                swap(arr[i][0], arr[i][c-1]);
        }

        // Print the modified matrix
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                cout << arr[i][j] << " ";
            }
            cout << endl;
        }
    }
};



###IN JAVA

class Solution {
    void interchange(int matrix[][], int r, int c) {
        for (int i = 0; i < r; i++) {
            int temp = matrix[i][0];
            matrix[i][0] = matrix[i][c - 1];
            matrix[i][c - 1] = temp;
        }

        // Printing elements
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }
    }
}




###IN PYTHON3

class Solution:
    def interchange(self,matrix,r,c):
        for i in range(r):
            matrix[i][0], matrix[i][c - 1] = matrix[i][c - 1], matrix[i][0]

        # Printing elements
        for i in range(r):
            for j in range(c):
                print(matrix[i][j], end=' ')
            print()


        
