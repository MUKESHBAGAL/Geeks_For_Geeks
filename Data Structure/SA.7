### IN C++

string merge (string S1, string S2)
{
    string result;
    int i = 0, j = 0;
    
    while (i < S1.size() && j < S2.size()) {
        result += S1[i++];
        result += S2[j++];
    }
    
    while (i < S1.size()) {
        result += S1[i++];
    }
    
    while (j < S2.size()) {
        result += S2[j++];
    }
    
    return result;
}



### IN JAVA

class Solution 
{ 
    String merge(String S1, String S2)
    { 
        StringBuilder result = new StringBuilder();
        int i = 0, j = 0;

        while (i < S1.length() && j < S2.length()) {
            result.append(S1.charAt(i++));
            result.append(S2.charAt(j++));
        }

        while (i < S1.length()) {
            result.append(S1.charAt(i++));
        }

        while (j < S2.length()) {
            result.append(S2.charAt(j++));
        }

        return result.toString();
    }
}


### IN PYTHON

class Solution:
    def merge(self, S1, S2):
        result = []
        i, j = 0, 0
    
        while i < len(S1) and j < len(S2):
            result.append(S1[i])
            result.append(S2[j])
            i += 1
            j += 1
    
        while i < len(S1):
            result.append(S1[i])
            i += 1
    
        while j < len(S2):
            result.append(S2[j])
            j += 1
    
        return ''.join(result)z
