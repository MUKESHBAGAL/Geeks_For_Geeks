###IN C++

class Solution {
  public:
    vector<int> getStar(vector<int>& arr) {
        vector<int> ans;
        int n = arr.size();
        int maxRight = INT_MIN;
        
        for (int i = n - 1; i >= 0; i--) {
            if (arr[i] > maxRight) {
                ans.push_back(arr[i]);
                maxRight = arr[i];
            }
        }
        
        reverse(ans.begin(), ans.end());
        return ans;
    }
};





###IN JAVA

import java.util.*;

class Solution {
    static ArrayList<Integer> getStar(int[] arr) {
        ArrayList<Integer> result = new ArrayList<>();
        int maxRight = Integer.MIN_VALUE;

        for (int i = arr.length - 1; i >= 0; i--) {
            if (arr[i] > maxRight) {
                result.add(arr[i]);
                maxRight = arr[i];
            }
        }

        Collections.reverse(result);
        return result;
    }
}




###IN PYTHON3

class Solution:
    def getStar(self, arr):
        ans = []
        max_right = float('-inf')
        
        for i in reversed(range(len(arr))):
            if arr[i] > max_right:
                ans.append(arr[i])
                max_right = arr[i]
        
        return ans[::-1]

        
