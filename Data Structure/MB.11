###IN C

bool searchRowMatrix(int** mat, int n, int m, int x) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (mat[i][j] == x) {
                return true;
            }
        }
    }
    return false;
    
}



###IN C++

class Solution {
  public:
    // Function to search a given number in row-column sorted matrix.
    bool searchRowMatrix(vector<vector<int>> &mat, int x) {
        for (const auto& row : mat) {
            if (find(row.begin(), row.end(), x) != row.end()) {
                return true;
            }
        }
        return false;
    }
};




###IN JAVA

class Solution {
    // Function to search a given number in row-column sorted matrix.
    public boolean searchRowMatrix(int[][] mat, int x) {
        for (int[] row : mat) {
            for (int num : row) {
                if (num == x) {
                    return true;
                }
            }
        }
        return false;
    }
}




###IN PYTHON

class Solution:
    #Function to search a given number in row-column sorted matrix.
    def searchRowMatrix(self, mat, x): 
    	for num in mat:
    	    if x in num:
    	        return True
    	return False



