###IN C++

class Node {
public:
    int data;
    Node* next;
    Node(int val) : data(val), next(nullptr) {}
};

class Solution {
public:
    Node* divide(Node* head) {
        if (!head) return nullptr;

        Node* evenHead = nullptr;
        Node* evenTail = nullptr;
        Node* oddHead = nullptr;
        Node* oddTail = nullptr;

        Node* current = head;

        while (current) {
            if (current->data % 2 == 0) {
                if (!evenHead) {
                    evenHead = current;
                    evenTail = evenHead;
                } else {
                    evenTail->next = current;
                    evenTail = evenTail->next;
                }
            } else {
                if (!oddHead) {
                    oddHead = current;
                    oddTail = oddHead;
                } else {
                    oddTail->next = current;
                    oddTail = oddTail->next;
                }
            }
            current = current->next;
        }

        if (evenTail) {
            evenTail->next = oddHead;
        }

        if (oddTail) {
            oddTail->next = nullptr;
        }

        return evenHead ? evenHead : oddHead;
    }
};

