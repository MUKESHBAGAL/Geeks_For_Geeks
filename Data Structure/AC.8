###C++

class Solution
{
    public:
    //Function to merge k sorted arrays.
    vector<int> mergeKArrays(vector<vector<int>> arr, int K)
    {
        vector<int> ans;
        
        for (int i = 0; i < K; i++) {
            for (int j = 0; j < arr[i].size(); j++) {
                ans.push_back(arr[i][j]);
            }
        }
        
        sort(ans.begin(), ans.end()); 
        
        return ans;
    }
};



###JAVA

class Solution {
    public static ArrayList<Integer> mergeKArrays(int[][] arr, int K) {
        ArrayList<Integer> ans = new ArrayList<>();
        
        for (int i = 0; i < K; i++) {
            for (int j = 0; j < arr[i].length; j++) {
                ans.add(arr[i][j]);
            }
        }
        
        Collections.sort(ans);
        
        return ans;
    }

    public static void main(String[] args) {
        int[][] arr = {{1, 3, 5}, {2, 4, 6}, {0, 7, 8}};
        int K = 3;
        
        ArrayList<Integer> result = mergeKArrays(arr, K);
        
        System.out.println(result);
    }
}



###PYTHON

class Solution:
    #Function to merge k sorted arrays.
    def mergeKArrays(self, arr, K):
        ans = []
        
        for i in range(K):
            for j in range(len(arr[i])):
                ans.append(arr[i][j])
        
        ans.sort()
        
        return ans

