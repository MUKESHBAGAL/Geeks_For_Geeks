###IN C++

class Solution {
  public:
    int DiagonalSum(vector<vector<int> >& matrix) {
        int sum = 0;
        int n = matrix.size();
        
        for (int i = 0; i < n; i++) {
            sum += matrix[i][i];
            sum += matrix[i][n - 1 - i];
        }
        return sum;
        
    }
};



###IN JAVA

class Solution {
    public int DiagonalSum(int[][] matrix) {
        int sum = 0;
        int n = matrix.length;
        
        for (int i = 0; i < n; i++) {
            sum += matrix[i][i];
            sum += matrix[i][n - 1 - i];
        }
        
        return sum;
        
    }
}


### IN PYTHON 

class Solution:
	def DiagonalSum(self, matrix):
		n = len(matrix)
        total = 0
        
        for i in range(n):
            total += matrix[i][i]
            total += matrix[i][n - 1 - i]
        
        return total

