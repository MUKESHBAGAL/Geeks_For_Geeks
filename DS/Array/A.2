###C++

class Solution {
  public:
    // Function to check if two arrays are equal or not.
    bool check(vector<int>& arr1, vector<int>& arr2) {
        if (arr1.size() != arr2.size()) {
            return false;
        }

        sort(arr1.begin(), arr1.end());
        sort(arr2.begin(), arr2.end());

        for (size_t i = 0; i < arr1.size(); i++) {
            if (arr1[i] != arr2[i]) {
                return false;
            }
        }

        return true;
    }
};

###JAVA

class Solution {
    public static boolean check(int[] arr1, int[] arr2) {
        if (arr1.length != arr2.length) {
            return false;
        }
        Arrays.sort(arr1);
        Arrays.sort(arr2);
        for (int i = 0; i < arr1.length; i++) {
            if (arr1[i] != arr2[i]) {
                return false;
            }
        }

        return true;
    }
}

###PYTHON

class Solution:
    # Function to check if two arrays are equal or not.
    def check(self, arr1, arr2) -> bool:
        if len(arr1) != len(arr2):
            return False
        
        arr1.sort()
        arr2.sort()

        for i in range(len(arr1)):
            if arr1[i] != arr2[i]:
                return False

        return True
